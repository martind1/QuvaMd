// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DeviceSimulator.Models
{
    public partial class cTempScaleDataScaleDatasqliteContext : DbContext
    {
        public cTempScaleDataScaleDatasqliteContext()
        {
        }

        public cTempScaleDataScaleDatasqliteContext(DbContextOptions<cTempScaleDataScaleDatasqliteContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Device> Device { get; set; }
        public virtual DbSet<DeviceParameter> DeviceParameter { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Device>(entity =>
            {
                entity.ToTable("DEVICE");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ChangeDate)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CHANGE_DATE");

                entity.Property(e => e.ChangeNumber).HasColumnName("CHANGE_NUMBER");

                entity.Property(e => e.ChangeUser)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CHANGE_USER");

                entity.Property(e => e.Code)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CODE");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CREATE_DATE");

                entity.Property(e => e.CreateUser)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CREATE_USER");

                entity.Property(e => e.DeviceType).HasColumnName("DEVICE_TYPE");

                entity.Property(e => e.IdLocation).HasColumnName("ID_LOCATION");

                entity.Property(e => e.ModuleCode)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("MODULE_CODE");

                entity.Property(e => e.Name)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("NAME");

                entity.Property(e => e.Note)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("NOTE");

                entity.Property(e => e.PackagingType).HasColumnName("PACKAGING_TYPE");

                entity.Property(e => e.Paramstring)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("PARAMSTRING");

                entity.Property(e => e.Porttype).HasColumnName("PORTTYPE");

                entity.Property(e => e.Roles).HasColumnName("ROLES");

                entity.Property(e => e.TransportType).HasColumnName("TRANSPORT_TYPE");
            });

            modelBuilder.Entity<DeviceParameter>(entity =>
            {
                entity.ToTable("DEVICE_PARAMETER");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.ChangeDate)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CHANGE_DATE");

                entity.Property(e => e.ChangeNumber).HasColumnName("CHANGE_NUMBER");

                entity.Property(e => e.ChangeUser)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CHANGE_USER");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CREATE_DATE");

                entity.Property(e => e.CreateUser)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("CREATE_USER");

                entity.Property(e => e.Description)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.IdDevice).HasColumnName("ID_DEVICE");

                entity.Property(e => e.Key)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("KEY");

                entity.Property(e => e.Note)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("NOTE");

                entity.Property(e => e.Value)
                    .HasColumnType("VARCHAR(50)")
                    .HasColumnName("VALUE");

                entity.HasOne(d => d.IdDeviceNavigation)
                    .WithMany(p => p.DeviceParameter)
                    .HasForeignKey(d => d.IdDevice);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}